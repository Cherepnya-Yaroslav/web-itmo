#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —á–∞—Ç–∞
"""

import socket
import threading
import time
import sys

class TestClient:
    def __init__(self, nickname, host='localhost', port=12347):
        self.nickname = nickname
        self.host = host
        self.port = port
        self.socket = None
        self.messages_received = []
        self.connected = False
        
    def connect(self):
        """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"""
        try:
            self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.socket.connect((self.host, self.port))
            self.connected = True
            return True
        except Exception as e:
            print(f"‚ùå {self.nickname}: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False
    
    def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"""
        if not self.connect():
            return
        
        print(f"‚úÖ {self.nickname}: –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∏–∫–Ω–µ–π–º
        try:
            response = self.socket.recv(1024).decode('utf-8').strip()
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∏–∫–Ω–µ–π–º
            self.socket.send(self.nickname.encode('utf-8'))
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            response = self.socket.recv(1024).decode('utf-8').strip()
            print(f"üìù {self.nickname}: {response}")
            
        except Exception as e:
            print(f"‚ùå {self.nickname}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞: {e}")
            return
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        receive_thread = threading.Thread(target=self.receive_messages, daemon=True)
        receive_thread.start()
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        time.sleep(0.5)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.send_message("–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!")
        time.sleep(1)
        self.send_message("/users")
        time.sleep(1)
        self.send_message("/time")
        time.sleep(1)
        self.send_message("–ü–æ–∫–∞!")
        
        # –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        time.sleep(2)
        
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        self.disconnect()
    
    def receive_messages(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            while self.connected:
                try:
                    message = self.socket.recv(1024).decode('utf-8')
                    if not message:
                        break
                    
                    self.messages_received.append(message.strip())
                    print(f"üì® {self.nickname} –ø–æ–ª—É—á–∏–ª: {message.strip()}")
                    
                except socket.error:
                    break
                except Exception as e:
                    print(f"‚ùå {self.nickname}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    break
        
        except Exception as e:
            print(f"‚ùå {self.nickname}: –û—à–∏–±–∫–∞ –ø–æ—Ç–æ–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")
    
    def send_message(self, message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä—É"""
        try:
            self.socket.send(message.encode('utf-8'))
            print(f"üì§ {self.nickname} –æ—Ç–ø—Ä–∞–≤–∏–ª: {message}")
        except Exception as e:
            print(f"‚ùå {self.nickname}: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    
    def disconnect(self):
        """–û—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
        self.connected = False
        if self.socket:
            try:
                self.socket.close()
            except:
                pass
        print(f"üëã {self.nickname}: –û—Ç–∫–ª—é—á–µ–Ω")

def test_multiple_clients():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —á–∞—Ç–∞")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    clients = [
        TestClient("Alice"),
        TestClient("Bob"),
        TestClient("Charlie")
    ]
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    threads = []
    for client in clients:
        thread = threading.Thread(target=client.start, daemon=True)
        threads.append(thread)
        thread.start()
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Ç–æ–∫–æ–≤
    for thread in threads:
        thread.join(timeout=10)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("-" * 30)
    
    total_messages = 0
    for client in clients:
        message_count = len(client.messages_received)
        total_messages += message_count
        print(f"{client.nickname}: –ø–æ–ª—É—á–∏–ª {message_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    print(f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–æ: {total_messages}")
    
    if total_messages > 0:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –∫–ª–∏–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω–∏–≤–∞—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–∞—Ç–∞")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:12347")
    print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    input()
    
    test_multiple_clients()

if __name__ == "__main__":
    main()
